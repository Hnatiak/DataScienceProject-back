"""Photo models_old added to db

Revision ID: 2b0077df03df
Revises: 4578cd9ba148
Create Date: 2024-05-18 12:34:45.423030

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '2b0077df03df'
down_revision: Union[str, None] = '4578cd9ba148'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('tags',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_tags_name'), 'tags', ['name'], unique=True)
    op.create_table('phototags',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('photo_id', sa.UUID(), nullable=False),
    sa.Column('tag_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['photo_id'], ['photos.id'], ),
    sa.ForeignKeyConstraint(['tag_id'], ['tags.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.add_column('photos', sa.Column('description', sa.String(length=2200), nullable=True))
    op.alter_column('photos', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)
    op.alter_column('photos', 'updated_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)
    op.alter_column('photos', 'user_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('photos', 'url',
               existing_type=sa.VARCHAR(length=255),
               type_=sa.String(length=2048),
               existing_nullable=False)
    op.create_index(op.f('ix_photos_created_at'), 'photos', ['created_at'], unique=False)
    op.create_index(op.f('ix_photos_description'), 'photos', ['description'], unique=False)
    op.drop_constraint('photos_user_id_fkey', 'photos', type_='foreignkey')
    op.create_foreign_key(None, 'photos', 'users', ['user_id'], ['id'], ondelete='CASCADE')
    op.drop_column('photos', 'name')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('photos', sa.Column('name', sa.VARCHAR(length=255), autoincrement=False, nullable=False))
    op.drop_constraint(None, 'photos', type_='foreignkey')
    op.create_foreign_key('photos_user_id_fkey', 'photos', 'users', ['user_id'], ['id'])
    op.drop_index(op.f('ix_photos_description'), table_name='photos')
    op.drop_index(op.f('ix_photos_created_at'), table_name='photos')
    op.alter_column('photos', 'url',
               existing_type=sa.String(length=2048),
               type_=sa.VARCHAR(length=255),
               existing_nullable=False)
    op.alter_column('photos', 'user_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('photos', 'updated_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False)
    op.alter_column('photos', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False)
    op.drop_column('photos', 'description')
    op.drop_table('phototags')
    op.drop_index(op.f('ix_tags_name'), table_name='tags')
    op.drop_table('tags')
    # ### end Alembic commands ###
